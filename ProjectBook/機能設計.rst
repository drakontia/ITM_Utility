********************
4. システム機能設計
********************

ここでは、以下の設計概要について記載する。

    イベント管理機能設計
        監視サーバーに実装するイベント管理機能に対する設計

    監視機能設計
        管理対象サーバーに提供する監視機能に対する設計

    その他個別機能要件に対する設計
        上記範囲に含まれない機能に対する設計

.. note:: ここでは機能の概要はもちろんだが、何のために行うのかという話を展開したい。
.. attention:: 実装とか方式とか処理とかそういうものは詳細設計書で書くべき。具体的な数値も最小限にしていいと思う。

4.1. イベント管理機能設計
===========================

4.1.1. イベント重要度管理機能
--------------------------------

発生した障害イベントの発生元、種別、イベント内容に基づいて、5段階の重要度を割り当てる機能です。

これにより、1次切り分けが単純化され、より重要度の高い障害イベントへの対応を迅速にすることが可能となります。

本環境では、障害イベントを以下の重大度、またそれに紐付いた対応に分別します。

.. csv-table::
  :header-rows: 1

  重大度,発生時対応
  Critical,即時電話対応・メール通知（危機的）
  Major,一次対応手順有り・メール通知（影響大）
  Minor,非緊急・メール通知のみの対応（限定的影響）
  Warning,通知無し（警告）
  Indeterminate,通知無し（未判別・情報）
  Clear,通知無し（正常・回復）


4.1.2. イベント対応状況管理機能
----------------------------------

監視コンソールにより、発生した障害イベントのステータスの表示、変更を可能とする機能。

対応/未対応の判別が容易になることで障害イベントの対応忘れを防ぐ。

4.1.1. 共通Netcoolイベント管理機能
-------------------------------------

4.1.1.1. 統合Netcoolサーバーへのイベント転送
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

以下に、当監視システムから統合監視システムへのイベント通知方式を示す。

Netcoolイベント情報

* 監視システムからAutomation[1]_、及びUni-Directional Gateway[2]_を使用して、統合監視システムへイベントを通知する。

* イベント通知の条件として、SeverityがCRITICALかMAJORのイベントであること。

.. [1] 「Automation」とはObject Serverの機能で、設定された条件に応じてイベントの判定を行う。

.. [2] 「Uni-Directional Gateway」はAutomationの判定結果を受け、イベントの転送を実施する。

4.1.1.2. Netcoolサーバー間疎通障害検知機能
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

当機能は、Netcoolサーバーから統合監視システムに対して定期的にハートビートイベントを送信することによって実施する。

15分以上新規ハートビートイベントの通知がない場合、統合監視システムがお客様Netcoolサーバーに障害が発生したと判断し障害と判断する。


4.1.3. 監視抑止機能設計
--------------------------

諸事由により、指定のサーバーから発生した障害イベントが通知されるのを抑制する機能。

非監視の設定を行う場合、状況に応じて以下の手段を使い分けるものとする。

* 長期的に監視を抑止したい場合
    監視対象から除外するなど、長期的または恒久的に監視を抑止する必要がある場合、お客様環境のNetcoolサーバーにて監視抑止設定を実施する。（[A]）

* 一時的に監視を抑止したい場合
    サーバーの計画的再起動など、一時的に監視を抑止する必要がある場合、統合監視システム監視担当へ監視抑止を依頼する。（[B]）

4.1.4. イベントリモート通知機能
----------------------------------

発生した障害イベントに対して、あらかじめ設定された条件に基づいて、メール、パトランプ、ポップアップなどを用いて通知する機能。

4.2. 監視機能設計
===================

4.2.1. 死活監視設計
----------------------

死活監視は、監視システムから管理対象に対してPingでの応答を利用することにより、
定期的にネットワークインターフェースの状態を確認する機能である。

当監視システムでは、ノードダウン、ノードアップという状態に対して、監視を実施する。

    :ノードダウン: 管理対象のネットワークインターフェースとの通信が不可能となった状態。
    :ノードアップ: 管理対象のネットワークインターフェースとの通信が回復した状態。

4.2.2. ハードウェア監視設計
------------------------------

ハードウェア監視とは、管理対象のハードウェア機器が備えている機能により検出される障害を
自動的に収集、分類、または必要に応じて加工する機能である。

これにより、サーバーに直接ログインすることなく、遠隔で障害を検出することが可能となる。

当監視システムでは、AIX、NW機器に対してハードウェア監視を実施する。

4.2.2.1. ハードウェア監視（AIX）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AIXでは、サーバー機器が出力するerrptのログを固有のファイルに出力して[1]_、
それをSyslog Probeによりあらかじめ設定された条件に応じて障害を検出する機能である。

検出された障害は、イベントとして、Object Serverに送信される。

Object Serverは、受信した障害イベントをDBに格納し、かつ統合Netcoolサーバーへ転送する。

.. [1] errptログの直接監視を行わない理由は、Syslog Probeの仕様として複数行のログ監視を行うことが出来ないためである。

4.2.2.2. ハードウェア監視（NW）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

ハードウェア監視(NW)では、各ハードウェアにて障害が発生した際にSNMP Trapを使用して障害を検出する機能である。

検出された障害はSNMP Trapd Probeに送信され、さらにSNMP Trapd ProbeはObject Serverに障害イベントの通知を行う。

Object Serverは、受信した障害イベントをObject Server内のDBに格納し、かつ統合Netcool Serverへ転送する。

4.2.3. OS標準監視設計
------------------------

OS標準監視機能とは、各OSが正常に動作するのに妥当と考えられる性能の上限値を閾値として設定して、
閾値を超過した場合を異常と判断してイベントを発行する機能である。

これにより、サーバーが異常動作したことに迅速に対処したり、異常動作を未然に防ぐことが可能となる。

当監視システムでは、サーバーの動作に特に影響のあるCPU、ディスク、メモリについて監視を実施する。

4.2.3.1. CPU監視
^^^^^^^^^^^^^^^^^^^^

CPU監視とは、OS Agentが定期的にOSのCPU情報を収集するように設定して、
CPUの使用率が指定された閾値を超過していることを異常と判断してイベントを発行する機能である。

OS Agentは異常が発生したことをTEMSに送信し、TEMSはEIF ProbeにEIFイベントを送信する。

EIF Probeは、イベント形式をNetcoolにて使用されているイベントに変換しObject Serverに障害イベントの通知を行う。

Object Serverは、受信した障害イベントをObject Server内のDB(alerts.status)に格納し、かつ統合Netcool Serverへ転送する。

4.2.3.2. メモリ監視
^^^^^^^^^^^^^^^^^^^^^^^

メモリ監視とは、OS Agentが定期的にOSのメモリ情報を収集するように設定して、
メモリの使用率が指定された閾値を超過していることを異常と判断してイベントを発行する機能である。

OS Agentは異常が発生したことをTEMSに送信し、TEMSはEIF ProbeにEIFイベントを送信する。

EIF Probeは、イベント形式をNetcoolにて使用されているイベントに変換しObject Serverに障害イベントの通知を行う。

Object Serverは、受信した障害イベントをObject Server内のDB(alerts.status)に格納し、かつ統合Netcool Serverへ転送する。

4.2.3.3. ファイルシステム監視
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

ファイルシステム監視とは、OS Agentが定期的にOSのファイルシステム情報を収集するように設定して、
ファイルシステムの使用率が指定された閾値を超過していることを異常と判断してイベントを発行する機能である。

OS Agentは異常が発生したことをTEMSに送信し、TEMSはEIF ProbeにEIFイベントを送信する。

EIF Probeは、イベント形式をNetcoolにて使用されているイベントに変換しObject Serverに障害イベントの通知を行う。

Object Serverは、受信した障害イベントをObject Server内のDB(alerts.status)に格納し、かつ統合Netcool Serverへ転送する。

4.2.4. ミドルウェア監視設計
------------------------------------------------

ミドルウェア監視機能とは、各ミドルウェアが正常に動作するのに妥当と考えられる
性能の上限値を閾値として設定するか、もしくはプロセスの死活を条件として設定して
閾値を超過した場合、プロセスが停止した場合を異常と判断してイベントを発行する機能である。

これにより、ミドルウェアが異常停止したことに迅速に対処したり、異常動作を未然に防ぐことが可能となる。

当監視システムでは、ミドルウェアの動作に特に影響のあるファイルシステム、プロセスについて監視を実施する。

当監視システムでは、以下のミドルウェアを監視対象とする。
  * Oracle Database
  * JP1
  * TSM

4.2.4.1. ファイルシステム監視
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

ファイルシステム監視とは、OS Agentが定期的にミドルウェアの使用するファイルシステム情報を収集するように設定して、
ファイルシステムの使用率が指定された閾値を超過していることを異常と判断してイベントを発行する機能である。

OS Agentは異常が発生したことをTEMSに送信し、TEMSはEIF ProbeにEIFイベントを送信する。

EIF Probeは、イベント形式をNetcoolにて使用されているイベントに変換しObject Serverに障害イベントの通知を行う。

Object Serverは、受信した障害イベントをObject Server内のDB(alerts.status)に格納し、かつ統合Netcool Serverへ転送する。

4.2.4.2. プロセス監視
^^^^^^^^^^^^^^^^^^^^^^^^^

プロセス監視とは、OS Agentが定期的にミドルウェアの実行するプロセスの実行状態を収集するように設定して、
プロセスが停止していることを異常と判断してイベントを発行する機能である。

OS Agentは異常が発生したことをTEMSに送信し、TEMSはEIF ProbeにEIFイベントを送信する。

EIF Probeは、イベント形式をNetcoolにて使用されているイベントに変換しObject Serverに障害イベントの通知を行う。

Object Serverは、受信した障害イベントをObject Server内のDB(alerts.status)に格納し、かつ統合Netcool Serverへ転送する。

4.3. その他機能設計
=====================

特になし
