****************
5. 運用機能設計
****************

ここでは、以下の機能概要について記載する。

* 冗長化機能

* バックアップ機能

* ログ管理機能

* 自動化機能

* 自己監視機能

5.1. 冗長化機能
=================

5.1.1. 冗長化設計（ObjectServer）
------------------------------------

(1) 冗長化設計概要

ObjectServerはソフトウェア機能による冗長構成をとる。正系と副系の2筐体でObjectServerが稼動する。
2台のObjectServerは、Bi-Gatewayというコンポーネントでデータの同期や、正副の切り替え制御を行う。
ObjectServerへ接続する各種Probeや監視コンソールは、正副両サーバーのアドレスを所有し、正系との通信ができない場合、自動的に副系との通信を行う。

(2) 冗長化設計構成図

(3) 冗長化設計処理概要

①,監視対象は正系ObjectServerへイベント転送を行う。
②,Bi－Gatewayは、定期的（1分毎）に正系と副系のObjectServerのデータ同期を行う。
③,正系のObjectServerで障害が発生した場合、Bi-Gatewayから副系のObjectServerへ障害が通知され、副系ObjectServerが正系サーバーとして稼働を開始する。
監視対象は自動的に副系のObjectServerへ接続する。
"統合監視サーバに導入されるEIF Probe, SNMP Probe、運用監視端末に導入される各コンソールも自動的に副系のObjectServerへ接続を行う。"

5.1.2. 冗長化設計（SNMP Probe）
----------------------------------

(1) 冗長化設計概要

SNMP Probeはソフトウェア機能による冗長構成をとる。正/副共にSNMP Probeを導入し、常時正系と副系の間で一定間隔でハートビート通信を行うことで生存確認を行う。
正系のSNMP Probeが停止した場合は、副系でハートビート通信の停止を検知し、ObjectServerにイベント送信を開始する。

(2) 冗長化設計構成図

(3) 冗長化設計処理概要

①,監視対象は常時正副両方のSNMP Probeに対してSNMPトラップを送信し、正系のSNMP ProbeがObjectServerへイベントを転送する。（※1）
②,SNMP Probeは正系から副系に対して一定間隔でハートビート通信を送信することで稼動確認を行う。
③,正系からのハートビート通信が途絶えた場合、正系SNMP Probeで障害が起こったと判断し、自動的に副系SNMP　Probeがイベント転送を開始する。
※1 ただし、SNMPトラップ送信宛先アドレスを1つしか設定できない機器は、PowerHAで引き継がれる統合監視サーバのサービスIPを宛先に設定する。
この場合、統合監視サーバ（正）で障害が発生し、PowerHAによるIP引き継ぎが行われている間は、SNMPトラップの監視を行うことができない。

5.1.3. 冗長化設計（EIF Probe）
---------------------------------

(1) 冗長化設計概要

正系、副系の両筐体に導入されたEIF Probeは、ソフトウェア機能による冗長構成は取らず、それぞれ別々に稼働する。
監視対象は正副両方の送信先アドレスを所有し、通常正系へのイベント転送を行うが、正系への通信ができない場合、自動的に副系へのイベント転送を開始する。
EIF Probeは監視対象側で正副の切り替え制御を行う。
（2）冗長化設計構成図
（3）冗長化設計処理概要
①,監視対象は通常正系EIF ProbeからObjectServerへイベント転送を行う。
②,正系EIF Probeの障害が発生し、通信ができなかった場合、自動的に副系EIF Probeへイベント転送を行う。
副系のEIF Probeでイベントが受信されると、正系と同様にObjectServerへイベントが転送される。

5.1.4. 冗長化設計（ITM）
---------------------------

(1) 冗長化設計概要
正系、副系の両筐体にITMはバイナリデータを持つが、データ（TEMS DBおよびTEPS DB）は共用VG上に配置する
PowerHA によって冗長化を実現、制御する
（2）冗長化設計構成図
（3）冗長化設計処理概要
①,監視対象ｻｰﾊﾞ上の監視AgentはService IP と疎通をする
②,通常、Primary側が共用リソースをもっているが、障害時はSecondary側へリソースを移動し監視を継続する
SecondaryでITM監視が開始されると、Secondary のEIF Probe(Service IP)へイベントが転送される。

5.1.5. 冗長化設計（ITNM）
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

(1) 冗長化設計概要
正系、副系の両筐体に導入されたITNMおよびNCIM DB(Informix)は、ソフトウェア機能による冗長構成をとって稼働する。
ポーリングは、通常正系から行い、DB Replication機能で副系にデータ同期される
（2）冗長化設計構成図
（3）冗長化設計処理概要
①,通常正系ITNMから管理対象へ、監視を行う。
②,正系ITNMの障害が発生した場合、自動的に副系ITNMが監視を開始する。

5.2. バックアップ設計
=======================

バックアップ設計は次の項目に分け、設計を行う。

* システムバックアップ（ボリューム・グループ含む）

* ミドルウェア製品構成情報

* 監視イベント情報

5.2.1. システムバックアップ設計
----------------------------------

(1)  バックアップ取得タイミング
大規模改修に伴い、事前にシステムバックアップを実施する。

(2)  バックアップ取得方法
テープメディアにバックアップファイルを取得。

5.2.2. ミドルウェア構成データバックアップ設計
------------------------------------------------

(1)  ミドルウェア構成データ概要
Netcool/OMNIbusについては、製品コマンドにより構成情報のデータ出力を行い、保管する。

(2)  ミドルウェア構成データ設計
製品,取得ログ内容
Netcool/OMNIbus,ユーザー情報（M/W上のユーザーのみ）
Event DB構成情報
自動化構成情報（Trigger設定）

（3） ミドルウェア構成データバックアップ設計
バックアップ項目,取得方法,タイミング,ミドルウェアの停止,世代,備考
Netcool/OMNIbus構成情報,構成情報取得スクリプトを実装,計画停止時、変更作業時,なし,※1
※1 バックアップ世代数は、『概要設計書（運用監視・バックアップ管理編）』（4.1.2章）に記載する。

5.2.3 監視イベント情報バックアップ設計
----------------------------------------

監視システムで受信されたイベントは、イベント受信時とイベント運用処理後にイベントログへ書き出される。
イベントログの書き出しは、ObjectServerのTriggerにより実装される。
イベントログの種類と取得タイミングは以下のようになる。
①,ObjectServerで受信したイベントは、自動化処理前に『イベント受信ログ』に書き出される。
②,ObjectServerの自動化処理で、受信したイベントが監視対象イベントと抑止対象イベントに分類され、
それぞれ『監視対象イベントログ』と『抑止イベントログ』に書き出される。
③,処理が完了したイベント、監視対象外となり抑止されたイベントはデータベースから定期的に削除される。このとき、イベント情報が『イベント削除ログ』に書き出される。

監視イベント情報,説明
イベント受信ログ,自動化処理前の受信時のイベント情報
監視対象イベントログ,監視対象の障害イベント情報
抑止イベントログ,計画停止により監視対象外（抑止）となったイベント情報
イベント削除ログ,イベントデータベースから削除されるイベント情報

5.3. ログ管理設計
===================

日次で保管するログについては、セキュリティポリシーに基づき、必要な世代数のバックアップを保管し、メンテナンスを実施する。
ログメンテナンス処理は、ログメンテナンスツール(logmgr）をcronに設定し、実行する。
なお、日次保管の必要なログは以下の通りである。詳細のログ名については詳細設計で記載する。

.. csv-table::
    :header-rows: 1

    メンテナンス項目,対象,説明
    サーバーログ,Netcool/OMNIbus,ObjectServerとProbe間通信、稼動状態に関するエラーメッセージを出力するログ
    エージェントログ

5.4. 自動化設計
=================

次に起動・停止制御方法に関して、統合監視サーバと監視対象サーバの各コンポーネント毎に記載する。

（１）起動設計

.. csv-table::
    :header-rows: 1

    サーバー,コンポーネント,起動方法,備考
    統合監視サーバ,ObjectServer,inittab,PA制御のため、PAの起動を行うスクリプトを実装する
    Bi-Gateway（副系のみ）,inittab,PA制御のため、PAの起動を行うスクリプトを実装する
    EIF Probe,inittab,PA制御のため、PAの起動を行うスクリプトを実装する
    SNMP Probe,inittab,PA制御のため、PAの起動を行うスクリプトを実装する
    Ping Probe,inittab,PA制御のため、PAの起動を行うスクリプトを実装する
    Process Agent,inittab
    監視対象サーバ　※1,Syslog Probe,inittab,PA制御のため、PAの起動を行うスクリプトを実装する
    Process Agent,inittab

（2）停止設計
停止設計はすべてスクリプトによる停止となる。

.. csv-table::
    :header-rows: 1

    サーバー,コンポーネント,停止方法,備考
    統合監視サーバ,ObjectServer,ジョブ,PA制御のため、PAの停止を行うスクリプトを実装する
    Bi-Gateway（副系のみ）,ジョブ,PA制御のため、PAの停止を行うスクリプトを実装する
    EIF Probe,ジョブ,PA制御のため、PAの停止を行うスクリプトを実装する
    SNMP Probe,ジョブ,PA制御のため、PAの停止を行うスクリプトを実装する
    Ping Probe,ジョブ,PA制御のため、PAの停止を行うスクリプトを実装する
    Process Agent,ジョブ
    監視対象サーバ　※1,Syslog Probe,ジョブ,PA制御のため、PAの起動を行うスクリプトを実装する
    Process Agent,ジョブ

5.5. 自己監視機能
===================

監視サービス自身の監視は次の方法で行う。

.. csv-table::
    :header-rows: 1

    サーバー,コンポーネント,監視方法
    統合監視サーバ,ObjectServer,Netcoolサーバーとのハートビート監視
    Bi-Gateway（副系のみ）,ObjectServerとの接続確認
    EIF Probe,Probeのハートビート機能により監視
    SNMP Probe,Probeのハートビート機能により監視
    監視対象サーバ,Syslog Probe,Probeのハートビート機能により監視
